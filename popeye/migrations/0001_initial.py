# Generated by Django 3.2.12 on 2022-03-19 07:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergies',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'allergies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('additional_info', models.CharField(blank=True, max_length=2000, null=True)),
            ],
            options={
                'db_table': 'cuisine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dishes',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('calories', models.IntegerField(blank=True, null=True)),
                ('preptime', models.IntegerField(blank=True, null=True)),
                ('cooktime', models.IntegerField(blank=True, null=True)),
                ('recipe', models.CharField(blank=True, max_length=8000, null=True)),
            ],
            options={
                'db_table': 'dishes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlavorProfile',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'flavor_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NonSeasonalIngredients',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'non_seasonal_ingredients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('name', models.CharField(max_length=10, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'season',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeasonalIngredients',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'seasonal_ingredients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BelongsCuisine',
            fields=[
                ('id', models.OneToOneField(db_column='ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='popeye.dishes')),
            ],
            options={
                'db_table': 'belongs_cuisine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HasFp',
            fields=[
                ('id', models.OneToOneField(db_column='ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='popeye.dishes')),
            ],
            options={
                'db_table': 'has_fp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InSeason',
            fields=[
                ('ingredient_name', models.OneToOneField(db_column='ingredient_name', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='popeye.seasonalingredients')),
            ],
            options={
                'db_table': 'in_season',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IsType',
            fields=[
                ('id', models.OneToOneField(db_column='ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='popeye.dishes')),
            ],
            options={
                'db_table': 'is_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NsContains',
            fields=[
                ('id', models.OneToOneField(db_column='ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='popeye.dishes')),
                ('quantity', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ns_contains',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Prone',
            fields=[
                ('id', models.OneToOneField(db_column='ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='popeye.dishes')),
            ],
            options={
                'db_table': 'prone',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SContains',
            fields=[
                ('id', models.OneToOneField(db_column='ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='popeye.dishes')),
                ('quantity', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 's_contains',
                'managed': False,
            },
        ),
    ]
